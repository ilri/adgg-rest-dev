App\Entity\Animal:
  collectionOperations:
    get:
      method: get
      path: /animals
      filters: ['animal.search_filter', 'country_isocode_filter', 'property_filter']
      normalization_context:
        groups: ['animal:collection:get']
      openapi_context:
        description:
          '<div>
                       <h3>Animal Endpoint</h3>
                       <p>This endpoint allows you to retrieve a collection of animals by applying specific filters.</p>
                       <p>To retrieve animals, use various parameters to tailor your search:</p>
                       <ul>
                         <li><code>tagId</code>: Filters animals by their unique tag ID. For example, use <code>T19000001</code>.</li>
                         <li><code>mobDataId</code>: Filters by the mobile-specific data ID.</li>
                         <li><code>mobFarmId</code>: Filters by the mobile-specific farm ID.</li>
                         <li><code>mobHerdId</code>: Filters by the mobile-specific herd ID.</li>
                         <li><code>mobSireId</code>: Filters by the mobile-specific sire ID.</li>
                         <li><code>mobDamId</code>: Filters by the mobile-specific dam ID.</li>
                         <li><code>animalType</code>: Identifies the type of animal. Provide an integer value, e.g., <code>1</code> for a specific animal type.</li>
                         <li><code>page</code>: Specifies the collection page number.</li>
                         <li><code>pagination</code>: Enables or disables pagination.</li>
                         <li><code>countryCode</code>: Provide the country ISO 3166-1 alpha-2 code.</li>
                       </ul>
                       <p>Combine different parameters to refine your search and retrieve specific sets of animals.</p>
                     </div>'
        parameters:
          - name: tagId
            in: query
            description: 'The animal''s tag ID<br><br>*Example value: T19000001*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'tagId[]'
            in: query
            description: 'Select multiple tag IDs'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: mobDataId
            in: query
            description: 'Filter by the mobile specific data ID'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'mobDataId[]'
            in: query
            description: 'Select multiple data IDs'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: mobFarmId
            in: query
            description: 'Filter by the mobile specific farm ID'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'mobFarmId[]'
            in: query
            description: 'Select multiple farm IDs'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: mobHerdId
            in: query
            description: 'Filter by the mobile specific Herd ID'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'mobHerdId[]'
            in: query
            description: 'Select multiple Herd IDs'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: mobSireId
            in: query
            description: 'Filter by the mobile specific Sire ID'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'mobSireId[]'
            in: query
            description: 'Select multiple Sire IDs'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: mobDamId
            in: query
            description: 'Filter by the mobile specific Dam ID'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'mobDamId[]'
            in: query
            description: 'Select multiple Dam IDs'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: animalType
            in: query
            description: 'The type of a given animal<br><br>*Example value: 1*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
            style: form
            explode: false
            allowReserved: false
          - name: 'animalType[]'
            in: query
            description: 'Select multiple animal types'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: integer
            style: form
            explode: true
            allowReserved: false
          - name: page
            in: query
            description: 'The collection page number'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
              default: 1
            style: form
            explode: false
            allowReserved: false
          - name: pagination
            in: query
            description: 'Enable or disable pagination'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: boolean
            style: form
            explode: false
            allowReserved: false
          - name: countryCode
            in: query
            description: 'Provide the country ISO 3166-1 alpha-2 code'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: createdBy
            in: query
            description: 'Filter by field agent'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
            style: form
            explode: false
            allowReserved: false
          - name: regionId
            in: query
            description: 'Filter by the Region ID'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
            style: form
            explode: false
            allowReserved: false
          - name: districtId
            in: query
            description: 'Filter by the District ID'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
            style: form
            explode: false
            allowReserved: false
          - name: wardId
            in: query
            description: 'Filter by the ward ID'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
            style: form
            explode: false
            allowReserved: false
          - name: villageId
            in: query
            description: 'Filter by the Village ID'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
            style: form
            explode: false
            allowReserved: false
          - name: isActive
            in: query
            description: 'Filter by the isActive'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
            style: form
            explode: false
            allowReserved: false
    post:
      method: post
      path: /animals
      denormalization_context:
        groups: [ 'animal:collection:post' ]
      openapi_context:
        description:
          '<h3>Creates a Animal resource</h3><p>The following properties are **required** and need to be provided in the request body:
          </p>`countryId`<p>`tagId`</p><p>All other properties are **optional**.</p>'
  itemOperations:
    get:
      method: get
      path: /animals/{id}
      normalization_context:
        groups: [ 'animal:item:get' ]
    put:
      method: put
      path: /animals/{id}
      denormalization_context:
        groups: [ 'animal:item:put' ]
      openapi_context:
        description:
          '<h3>Replaces the Animal resource specified by the `id` parameter</h3><p>The following properties are **required** and need to be provided in the request body:
          </p>`countryId`<p>`tagId`</p><p>All other properties are **optional**.</p>'
    patch:
      method: patch
      path: /animals/{id}
      denormalization_context:
        groups: [ 'animal:item:patch' ]
      openapi_context:
        description:
          '<h3>Updates the Animal resource specified by the `id` parameter</h3><p>The following properties are **required** and need to be provided in the request body:
          </p>`countryId`<p>`tagId`</p><p>All other properties are **optional**.</p>'
