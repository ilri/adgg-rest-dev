App\Entity\AnimalEvent:
  collectionOperations:
    get:
      method: get
      path: /animal_events
      filters: ['animalevent.search_filter', 'animalevent.date_filter', 'country_isocode_filter', 'property_filter']
      normalization_context:
        groups: [ 'animalevent:collection:get' ]
      openapi_context:
        description:
          '<div>
                       <h3>Animal Event Collection Endpoint</h3>
                       <p>This endpoint retrieves a collection of animal events based on specified filters.</p>
                       <p>Use the following parameters to filter animal events:</p>
                       <ul>
                         <li><code>animal</code>: Filter by a given animal resource path.</li>
                         <li><code>eventDate[before]</code>: Returns events before or on a given date.</li>
                         <li><code>eventDate[strictly_before]</code>: Returns events strictly before a given date.</li>
                         <li><code>eventDate[after]</code>: Returns events after or on a given date.</li>
                         <li><code>eventDate[strictly_after]</code>: Returns events strictly after a given date.</li>
                         <li><code>properties[]</code>: Returns only selected properties of animal event resources.</li>
                         <!-- Add other parameters here as per your requirements -->
                       </ul>
                       <p>Combine different parameters to refine your search and retrieve specific sets of animal events.</p>
                     </div>'
        parameters:
          - name: animal
            in: query
            description: 'The path to a given animal resource<br><br> *For example: /api/animals/104359*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'animal[]'
            in: query
            description: 'Select multiple animal resource paths'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: 'eventDate[before]'
            in: query
            description: 'Returns the animal event resources occurring **before** or **on** a given event date<br><br>*For example: 2020-01-01*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[strictly_before]'
            in: query
            description: 'Returns the animal event resoures occuring strictly **before** (not including) a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[after]'
            in: query
            description: 'Returns the animal event resoures occuring **after** or **on** a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[strictly_after]'
            in: query
            description: 'Returns the animal event resoures occuring strictly **after** (not including) a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'properties[]'
            in: query
            description: 'Returns only selected fields of animal event resources<br><br>*For example: eventType*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: page
            in: query
            description: 'The collection page number'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
              default: 1
            style: form
            explode: false
            allowReserved: false
          - name: pagination
            in: query
            description: 'Enable or disable pagination'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: boolean
            style: form
            explode: false
            allowReserved: false
          - name: countryCode
            in: query
            description: 'Provide the country ISO 3166-1 alpha-2 code'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
    custom_events:
      method: get
      path: /animal_events/{event_type}
      normalization_context:
        groups: [ 'animalevent:collection:get' ]
      requirements:
        event_type: '^[A-z]+\_events$'
      summary: 'Retrieves a sub-collection of AnimalEvent resources by event type.'
      description: 'Retrieves a sub-collection of AnimalEvent resources by event type.'
      openapi_context:
        description:
          '<div>
                            <p>The event type parameter used for filtering AnimalEvent resources. It specifies the type of event and supports the following options:</p>
                            <ul>
                              <li><code>ai_events</code>: Artificial Insemination Events - Records the process of artificial insemination in animals.</li>
                              <li><code>calving_events</code>: Calving Events - Captures the birth of offspring in animals.</li>
                              <li><code>certification_events</code>: Certification Events - Documents certification-related events for animals.</li>
                              <li><code>exits_events</code>: Exit Events - Records events related to animals exiting a location or system.</li>
                              <li><code>hair_sampling_events</code>: Hair Sampling Events - Documents events related to collecting hair samples from animals.</li>
                              <li><code>health_events</code>: Health Events - Records events concerning the health status or conditions of animals.</li>
                              <li><code>hoof_health_events</code>: Hoof Health Events - Captures events related to the health condition of animal hooves.</li>
                              <li><code>hoof_treatment_events</code>: Hoof Treatment Events - Documents treatments related to animal hoof health.</li>
                              <li><code>injury_events</code>: Injury Events - Records events related to injuries suffered by animals.</li>
                              <li><code>milking_events</code>: Milking Events - Captures events associated with the process of milking animals.</li>
                              <li><code>parasite_infection_events</code>: Parasite Infection Events - Documents events related to parasite infections in animals.</li>
                              <li><code>pregnancy_diagnosis_events</code>: Pregnancy Diagnosis Events - Records events concerning the diagnosis of pregnancy in animals.</li>
                              <li><code>synchronization_events</code>: Synchronization Events - Documents events related to synchronizing animal processes.</li>
                              <li><code>vaccination_events</code>: Vaccination Events - Captures events related to the vaccination of animals.</li>
                              <li><code>weights_events</code>: Weights Events - Records events related to measuring the weight of animals.</li>
                            </ul>
                          </div>'
        parameters:
          - name: event_type
            in: path
            description: 'The event type that animal events are filtered by.'
            required: true
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
              enum:
                - ai_events
                - calving_events
                - certification_events
                - exits_events
                - hair_sampling_events
                - health_events
                - hoof_health_events
                - hoof_treatment_events
                - injury_events
                - milking_events
                - parasite_infection_events
                - pregnancy_diagnosis_events
                - synchronization_events
                - vaccination_events
                - weights_events
            style: simple
            explode: false
            allowReserved: false
          - name: animal
            in: query
            description: 'The API path to a given animal resource<br><br> *For example: /api/animals/104359*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'animal[]'
            in: query
            description: 'The API paths to animal resources'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: 'eventDate[before]'
            in: query
            description: 'Returns the animal event resoures occuring **before** or **on** a given event date<br><br>*For example: 2020-01-01*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[strictly_before]'
            in: query
            description: 'Returns the animal event resoures occuring strictly **before** (not including) a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[after]'
            in: query
            description: 'Returns the animal event resoures occuring **after** or **on** a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[strictly_after]'
            in: query
            description: 'Returns the animal event resoures occuring strictly **after** (not including) a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'properties[]'
            in: query
            description: 'Returns only selected properties of animal event resources<br><br>*For example: eventType*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: page
            in: query
            description: 'The collection page number'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
              default: 1
            style: form
            explode: false
            allowReserved: false
          - name: pagination
            in: query
            description: 'Enable or disable pagination'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: boolean
            style: form
            explode: false
            allowReserved: false
          - name: countryCode
            in: query
            description: 'Provide the country ISO 3166-1 alpha-2 code'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
    post:
      method: post
      path: /animal_events
      denormalization_context:
        groups: [ 'animalevent:collection:post' ]
      openapi_context:
        description:
          '<h3>Creates a AnimalEvent resource</h3><p>The following properties are **required** and need to be provided in the request body:
          </p>`animal`<p>`countryId`</p>`eventDate`<p>`eventType`</p><p>All other properties are **optional**.</p>'
  itemOperations:
    get:
      method: get
      path: /animal_events/{id}
      normalization_context:
        groups: [ 'animalevent:item:get' ]
    put:
      method: put
      path: /animal_events/{id}
      denormalization_context:
        groups: [ 'animalevent:item:put' ]
      openapi_context:
        description:
          '<h3>Replaces the AnimalEvent resource specified by the `id` parameter</h3><p>The following properties are **required** and need to be provided in the request body:
          </p>`animal`<p>`countryId`</p>`eventDate`<p>`eventType`</p>
          <p>All other properties are **optional**.</p>'
    patch:
      method: patch
      path: /animal_events/{id}
      denormalization_context:
        groups: [ 'animalevent:item:patch' ]
      openapi_context:
        description:
          '<h3>Updates the AnimalEvent resource specified by the `id` parameter</h3><p>The following properties are **required** and need to be provided in the request body:
          </p>`animal`<p>`countryId`</p>`eventDate`<p>`eventType`</p>
          <p>All other properties are **optional**.</p>'
