App\Entity\AnimalEvent:
  collectionOperations:
    get:
      method: get
      path: /animal_events
      filters: ['animalevent.search_filter', 'animalevent.date_filter', 'country_isocode_filter', 'property_filter']
      normalization_context:
        groups: [ 'animalevent:collection:get' ]
      openapi_context:
        parameters:
          - name: animal
            in: query
            description: 'The path to a given animal resource<br><br> *For example: /api/animals/104359*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'animal[]'
            in: query
            description: 'Select multiple animal resource paths'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: 'eventDate[before]'
            in: query
            description: 'Returns the animal event resources occurring **before** or **on** a given event date<br><br>*For example: 2020-01-01*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[strictly_before]'
            in: query
            description: 'Returns the animal event resoures occuring strictly **before** (not including) a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[after]'
            in: query
            description: 'Returns the animal event resoures occuring **after** or **on** a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[strictly_after]'
            in: query
            description: 'Returns the animal event resoures occuring strictly **after** (not including) a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'properties[]'
            in: query
            description: 'Returns only selected fields of animal event resources<br><br>*For example: eventType*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: page
            in: query
            description: 'The collection page number'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
              default: 1
            style: form
            explode: false
            allowReserved: false
          - name: pagination
            in: query
            description: 'Enable or disable pagination'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: boolean
            style: form
            explode: false
            allowReserved: false
          - name: countryCode
            in: query
            description: 'Provide the country ISO 3166-1 alpha-2 code'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
    custom_events:
      method: get
      path: /animal_events/{event_type}
      normalization_context:
        groups: [ 'animalevent:collection:get' ]
      requirements:
        event_type: '^[A-z]+\_events$'
      summary: 'Retrieves a sub-collection of AnimalEvent resources by event type.'
      description: 'Retrieves a sub-collection of AnimalEvent resources by event type.'
      openapi_context:
        parameters:
          - name: event_type
            in: path
            description: 'The event type that animal events are filtered by.'
            required: true
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
              enum:
#                - ai_events
#                - calving_events
#                - certification_events
#                - exits_events
#                - hair_sampling_events
                - health_events
                - hoof_health_events
                - hoof_treatment_events
                - injury_events
                - milking_events
                - parasite_infection_events
#                - pregnancy_diagnosis_events
                - synchronization_events
#                - vaccination_events
#                - weights_events
            style: simple
            explode: false
            allowReserved: false
          - name: animal
            in: query
            description: 'The API path to a given animal resource<br><br> *For example: /api/animals/104359*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'animal[]'
            in: query
            description: 'The API paths to animal resources'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: 'eventDate[before]'
            in: query
            description: 'Returns the animal event resoures occuring **before** or **on** a given event date<br><br>*For example: 2020-01-01*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[strictly_before]'
            in: query
            description: 'Returns the animal event resoures occuring strictly **before** (not including) a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[after]'
            in: query
            description: 'Returns the animal event resoures occuring **after** or **on** a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'eventDate[strictly_after]'
            in: query
            description: 'Returns the animal event resoures occuring strictly **after** (not including) a given event date'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
          - name: 'properties[]'
            in: query
            description: 'Returns only selected properties of animal event resources<br><br>*For example: eventType*'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
            allowReserved: false
          - name: page
            in: query
            description: 'The collection page number'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: integer
              default: 1
            style: form
            explode: false
            allowReserved: false
          - name: pagination
            in: query
            description: 'Enable or disable pagination'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: boolean
            style: form
            explode: false
            allowReserved: false
          - name: countryCode
            in: query
            description: 'Provide the country ISO 3166-1 alpha-2 code'
            required: false
            deprecated: false
            allowEmptyValue: false
            schema:
              type: string
            style: form
            explode: false
            allowReserved: false
#    post:
#      method: post
#      path: /animal_events
#      denormalization_context:
#        groups: [ 'animalevent:collection:post' ]
#      openapi_context:
#        description:
#          '<h3>Creates a AnimalEvent resource</h3><p>The following properties are **required** and need to be provided in the request body:
#          </p>`animal`<p>`countryId`</p>`eventDate`<p>`eventType`</p><p>All other properties are **optional**.</p>'
  itemOperations:
    get:
      method: get
      path: /animal_events/{id}
      normalization_context:
        groups: [ 'animalevent:item:get' ]
#    put:
#      method: put
#      path: /animal_events/{id}
#      denormalization_context:
#        groups: [ 'animalevent:item:put' ]
#      openapi_context:
#        description:
#          '<h3>Replaces the AnimalEvent resource specified by the `id` parameter</h3><p>The following properties are **required** and need to be provided in the request body:
#          </p>`animal`<p>`countryId`</p>`eventDate`<p>`eventType`</p>
#          <p>All other properties are **optional**.</p>'
#    patch:
#      method: patch
#      path: /animal_events/{id}
#      denormalization_context:
#        groups: [ 'animalevent:item:patch' ]
#      openapi_context:
#        description:
#          '<h3>Updates the AnimalEvent resource specified by the `id` parameter</h3><p>The following properties are **required** and need to be provided in the request body:
#          </p>`animal`<p>`countryId`</p>`eventDate`<p>`eventType`</p>
#          <p>All other properties are **optional**.</p>'
