# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDir: '%kernel.project_dir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
#    App\Controller\:
#        resource: '../src/Controller/'
#        tags: ['controller.service_arguments']
    App\Controller\SyncController\:
        resource: '../src/Controller/SyncController.php'
        tags:
            - { name: 'api_platform.resource', shortName: 'SyncUploadDownload' }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Add endpoint /authentication_token in the SwaggerUI
    App\OpenApi\JwtDecorator:
        decorates: 'api_platform.openapi.factory'
        autoconfigure: false

    App\OpenApi\ParameterDecorator:
        decorates: 'api_platform.openapi.factory'
        autoconfigure: false

    App\EventListener\MilkingEventListener:
        tags:
            name: 'doctrine.orm.entity_listener'
            event: 'postLoad'
            entity: 'App\Entity\AnimalEvent'

    App\EventListener\LactationListener:
        tags:
            name: 'doctrine.orm.entity_listener'
            event: 'prePersist'
            entity: 'App\Entity\AnimalEvent'

    App\Security\AuthenticationSuccessHandler:
        arguments: [ '@lexik_jwt_authentication.jwt_manager' ]

    App\Security\AppUserProvider:
        arguments: [ '@doctrine.orm.default_entity_manager' ]

    #API Platform Filters
    animal.search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { 'tagId': 'exact', 'animalType': 'exact' } ]
        tags: [ { name: 'api_platform.filter', id: 'animal.search_filter' } ]

    animalevent.search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { 'animal': 'exact' } ]
        tags: [ { name: 'api_platform.filter', id: 'animalevent.search_filter' } ]

    farm.search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { 'phone': 'exact', 'id': 'exact' } ]
        tags: [ { name: 'api_platform.filter', id: 'farm.search_filter' } ]

    animalevent.date_filter:
        parent: 'api_platform.doctrine.orm.date_filter'
        arguments: [ { eventDate: ~ } ]
        tags: [ { name: 'api_platform.filter', id: 'animalevent.date_filter' } ]

    property_filter:
        parent: 'api_platform.serializer.property_filter'
        tags: [ { name: 'api_platform.filter', id: 'property_filter' } ]

    country_isocode_filter:
        class: 'App\Filter\CountryISOCodeFilter'
        tags: [ { name: 'api_platform.filter', id: 'country_isocode_filter' } ]

    masterlist.search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { 'listType': 'exact' } ]
        tags: [ { name: 'api_platform.filter', id: 'masterlist.search_filter' } ]

    countryunits.search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { 'level': 'exact', 'parentId': 'exact' } ]
        tags: [ { name: 'api_platform.filter', id: 'countryunits.search_filter' } ]

    App\Serializer\Normalizer\IncludeNullsObjectNormalizer:
        tags:
            - { name: serializer.normalizer }




